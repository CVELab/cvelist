{
    "GSD": {
        "alias": "CVE-2022-30283",
        "id": "GSD-2022-30283"
    },
    "namespaces": {
        "cve.org": {
            "CVE_data_meta": {
                "ASSIGNER": "cve@mitre.org",
                "ID": "CVE-2022-30283",
                "STATE": "RESERVED"
            },
            "data_format": "MITRE",
            "data_type": "CVE",
            "data_version": "4.0",
            "description": {
                "description_data": [
                    {
                        "lang": "eng",
                        "value": "** RESERVED ** This candidate has been reserved by an organization or individual that will use it when announcing a new security problem. When the candidate has been publicized, the details for this candidate will be provided."
                    }
                ]
            }
        },
        "nvd.nist.gov": {
            "configurations": {
                "CVE_data_version": "4.0",
                "nodes": []
            },
            "cve": {
                "CVE_data_meta": {
                    "ASSIGNER": "cve@mitre.org",
                    "ID": "CVE-2022-30283"
                },
                "data_format": "MITRE",
                "data_type": "CVE",
                "data_version": "4.0",
                "description": {
                    "description_data": [
                        {
                            "lang": "en",
                            "value": "In UsbCoreDxe, tampering with the contents of the USB working buffer using DMA while certain USB transactions are in process leads to a TOCTOU problem that could be used by an attacker to cause SMRAM corruption and escalation of privileges The UsbCoreDxe module creates a working buffer for USB transactions outside of SMRAM. The code which uses can be inside of SMM, making the working buffer untrusted input. The buffer can be corrupted by DMA transfers. The SMM code code attempts to sanitize pointers to ensure all pointers refer to the working buffer, but when a pointer is not found in the list of pointers to sanitize, the current action is not aborted, leading to undefined behavior. This issue was discovered by Insyde engineering based on the general description provided by Intel's iSTARE group. Fixed in: Kernel 5.0: Version 05.09. 21 Kernel 5.1: Version 05.17.21 Kernel 5.2: Version 05.27.21 Kernel 5.3: Version 05.36.21 Kernel 5.4: Version 05.44.21 Kernel 5.5: Version 05.52.21 https://www.insyde.com/security-pledge/SA-2022063"
                        }
                    ]
                },
                "problemtype": {
                    "problemtype_data": [
                        {
                            "description": []
                        }
                    ]
                },
                "references": {
                    "reference_data": [
                        {
                            "name": "https://www.insyde.com/security-pledge",
                            "refsource": "MISC",
                            "tags": [],
                            "url": "https://www.insyde.com/security-pledge"
                        },
                        {
                            "name": "https://www.insyde.com/security-pledge/SA-2022063",
                            "refsource": "MISC",
                            "tags": [],
                            "url": "https://www.insyde.com/security-pledge/SA-2022063"
                        }
                    ]
                }
            },
            "impact": {},
            "lastModifiedDate": "2022-11-15T21:56Z",
            "publishedDate": "2022-11-15T21:15Z"
        }
    }
}